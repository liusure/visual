import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _class, _temp;

import React, { PureComponent } from 'react';
import { findDOMNode } from 'react-dom';
import cx from 'classnames';
var DesignEditorItem = (_temp = _class = function (_PureComponent) {
  _inherits(DesignEditorItem, _PureComponent);

  function DesignEditorItem() {
    _classCallCheck(this, DesignEditorItem);

    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));
  }

  DesignEditorItem.prototype.render = function render() {
    var _props = this.props,
        disabled = _props.disabled,
        prefix = _props.prefix,
        className = _props.className;


    return React.createElement(
      'div',
      { className: cx(prefix + '-design-editor-item', className) },
      disabled && React.createElement('div', { className: prefix + '-design__disabled-mask' }),
      this.props.children
    );
  };

  DesignEditorItem.prototype.getBoundingBox = function getBoundingBox() {
    var node = findDOMNode(this);
    return node && node.getBoundingClientRect();
  };

  return DesignEditorItem;
}(PureComponent), _class.defaultProps = {
  disabled: false,
  prefix: 'zent'
}, _temp);
export { DesignEditorItem as default };