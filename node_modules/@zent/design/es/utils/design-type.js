import _isFunction from 'lodash/isFunction';
import _isNumber from 'lodash/isNumber';
import _isArray from 'lodash/isArray';
import _isString from 'lodash/isString';


export function getDesignType(editor, defaultType) {
  var designType = editor.designType;


  if (_isString(designType)) {
    if (_isFunction(defaultType)) {
      return defaultType(designType);
    }
    return designType;
  }

  if (_isArray(designType) && designType.length > 0) {
    if (_isNumber(defaultType)) {
      return designType[defaultType || 0];
    }

    if (_isFunction(defaultType)) {
      return defaultType(designType);
    }

    return designType[0];
  }

  throw new TypeError('designType should be a string or an array of strings');
}

export function isExpectedDesignType(component, expected) {
  var type = component.type;


  if (_isString(type)) {
    return expected === type;
  }

  if (_isArray(type)) {
    return type.indexOf(expected) !== -1;
  }

  return false;
}

export function serializeDesignType(designType) {
  if (_isString(designType)) {
    return designType;
  }
  if (_isArray(designType)) {
    return designType.join(' | ');
  }

  throw new TypeError('designType should be a string or an array of strings');
}

export var COMPONENT_GROUP_DESIGN_TYPE = '__zent-design-component-group__';