import { __extends } from "tslib";
import * as React from 'react';
import { Component } from 'react';
import cx from 'classnames';
import Pop from '../pop';
import Icon from '../icon';
var BlockHeader = (function (_super) {
    __extends(BlockHeader, _super);
    function BlockHeader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BlockHeader.prototype.renderTitle = function () {
        var title = this.props.title;
        return (React.createElement("div", { className: "zent-block-header__title" },
            React.createElement("h3", null, title)));
    };
    BlockHeader.prototype.renderTooltip = function () {
        var _a = this.props, tooltip = _a.tooltip, position = _a.position;
        return (React.createElement("div", { className: "zent-block-header__pop" },
            React.createElement(Pop, { trigger: "hover", centerArrow: true, position: position, content: React.createElement("div", { className: "zent-block-header__tooltip" }, tooltip), wrapperClassName: "zent-block-header__tooltip-trigger" },
                React.createElement(Icon, { type: "help-circle" }))));
    };
    BlockHeader.prototype.renderLeftContent = function () {
        var leftContent = this.props.leftContent;
        return (React.createElement("div", { className: cx('zent-block-header__content', 'zent-block-header__content-left') }, leftContent));
    };
    BlockHeader.prototype.renderRightContent = function () {
        var rightContent = this.props.rightContent;
        return (React.createElement("div", { className: cx('zent-block-header__content', 'zent-block-header__content-right') }, rightContent));
    };
    BlockHeader.prototype.render = function () {
        var _a = this.props, leftContent = _a.leftContent, rightContent = _a.rightContent, tooltip = _a.tooltip, className = _a.className;
        return (React.createElement("div", { className: cx('zent-block-header', className) },
            this.renderTitle(),
            tooltip && this.renderTooltip(),
            leftContent && this.renderLeftContent(),
            rightContent && this.renderRightContent()));
    };
    BlockHeader.defaultProps = {
        className: '',
        position: 'top-right',
    };
    return BlockHeader;
}(Component));
export { BlockHeader };
export default BlockHeader;
