import { PureComponent } from 'react';
import { Omit } from 'utility-types';
import { noop } from './constants';
import { DatePickers } from './common/types';
export interface IQuarterPickerProps extends Omit<DatePickers.ICommonProps<DatePickers.RangeValue>, 'disabledDate'> {
    disabledDate?: (val: [DatePickers.Value, DatePickers.Value], type?: DatePickers.RangeType) => boolean;
    onBeforeClear?: () => boolean;
}
export declare class QuarterPicker extends PureComponent<IQuarterPickerProps, any> {
    static defaultProps: {
        placeholder: string;
        format: string;
        prefix: string;
        confirmText: string;
        popPosition: string;
        openPanel: boolean;
        onChange: typeof noop;
        isFooterVisble: boolean;
        canClear: boolean;
        autoComplete: string;
    };
    static getDerivedStateFromProps(props: IQuarterPickerProps, state: any): {
        value: any;
        actived: any;
        selected: any;
        openPanel: boolean;
        showPlaceholder: any;
        prevProps: IQuarterPickerProps;
    };
    retType: string;
    picker: HTMLDivElement | null;
    constructor(props: IQuarterPickerProps);
    getReturnValue: (date: Date) => DatePickers.Value;
    onChangeQuarter: (val: any) => void;
    onSelectQuarter: (quarter: any) => void;
    onClearInput: (evt: any) => void;
    isDisabled: (quarter: any) => boolean;
    renderPicker(i18n: any): any;
    togglePicker: () => void;
    render(): JSX.Element;
}
export default QuarterPicker;
