import { __assign, __rest } from "tslib";
import * as React from 'react';
import Icon from '../icon';
function preventDefault(e) {
    e.preventDefault();
}
export var InputCore = React.forwardRef(function (props, ref) {
    var addonBefore = props.addonBefore, addonAfter = props.addonAfter, showClear = props.showClear, value = props.value, onClear = props.onClear, width = props.width, size = props.size, onPressEnter = props.onPressEnter, autoFocus = props.autoFocus, autoSelect = props.autoSelect, initSelectionStart = props.initSelectionStart, initSelectionEnd = props.initSelectionEnd, icon = props.icon, inline = props.inline, onIconClick = props.onIconClick, otherProps = __rest(props, ["addonBefore", "addonAfter", "showClear", "value", "onClear", "width", "size", "onPressEnter", "autoFocus", "autoSelect", "initSelectionStart", "initSelectionEnd", "icon", "inline", "onIconClick"]);
    return (React.createElement(React.Fragment, null,
        addonBefore && (React.createElement("div", { className: "zent-input-addon-before" }, addonBefore)),
        React.createElement("input", __assign({}, otherProps, { ref: ref, className: "zent-input", value: value })),
        showClear && value && (React.createElement(Icon, { className: "zent-input-close", type: "close-circle", onClick: onClear, onMouseDown: preventDefault })),
        icon ? (React.createElement(Icon, { className: "zent-input-icon", type: icon, onClick: onIconClick })) : null,
        addonAfter && React.createElement("div", { className: "zent-input-addon-after" }, addonAfter)));
});
InputCore.displayName = 'Input';
