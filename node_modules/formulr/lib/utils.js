import { useEffect } from 'react';
export function noop() { }
export var id = function (it) { return it; };
export function isPlainObject(value) {
    if (value === null || typeof value !== 'object') {
        return false;
    }
    if (Object.getPrototypeOf(value) === null) {
        return true;
    }
    var proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
}
export function removeOnUnmount(field, model, parent) {
    useEffect(function () { return function () {
        if (typeof field === 'string' && model.destroyOnUnmount) {
            parent.removeChild(field);
        }
    }; }, [field, model, model]);
}
//# sourceMappingURL=utils.js.map